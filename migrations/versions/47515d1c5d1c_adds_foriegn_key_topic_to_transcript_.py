"""Adds foriegn key topic to transcript and speaker, critical, relevance columns

Revision ID: 47515d1c5d1c
Revises: e508dc2e8243
Create Date: 2019-11-11 19:11:01.926070

"""
from alembic import op
from alembic import context
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "47515d1c5d1c"
down_revision = "e508dc2e8243"
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "transcription", sa.Column("critical", sa.String(length=200), nullable=False)
    )
    op.add_column(
        "transcription", sa.Column("relevance", sa.String(length=200), nullable=False)
    )
    op.add_column(
        "transcription", sa.Column("speaker", sa.String(length=200), nullable=False)
    )
    op.add_column("transcription", sa.Column("topic", sa.Integer(), nullable=False))
    op.create_foreign_key(None, "transcription", "topic", ["topic"], ["id"])
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("transcription_ibfk_2", "transcription", type_="foreignkey")
    op.drop_column("transcription", "topic")
    op.drop_column("transcription", "speaker")
    op.drop_column("transcription", "relevance")
    op.drop_column("transcription", "critical")
    # ### end Alembic commands ###



def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    topic_table = sa.sql.table("topic", sa.sql.column("topic", sa.String))

    op.bulk_insert(
        topic_table,
        [
            {"topic": "Breastfeeding"},
            {"topic": "Danger sign in mother"},
            {"topic": "Danger sign in newborn"},
            {"topic": "Health and happiness in mother"},
            {"topic": "Newborn temperature"},
            {"topic": "Talking and playing with newborn baby"},
            {"topic": "Other"}
        ],
    )


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    op.execute("DELETE FROM topic")

