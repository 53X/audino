"""Remove speaker, critical and relevance columns

Revision ID: c88ec9d5221b
Revises: 47515d1c5d1c
Create Date: 2019-12-20 18:13:11.730793

"""
from alembic import op
from alembic import context
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c88ec9d5221b'
down_revision = '47515d1c5d1c'
branch_labels = None
depends_on = None

def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()

def downgrade():
    schema_downgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()

def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('transcription', 'critical')
    op.drop_column('transcription', 'speaker')
    op.drop_column('transcription', 'relevance')
    # ### end Alembic commands ###

def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transcription', sa.Column('relevance', mysql.VARCHAR(length=200), nullable=False))
    op.add_column('transcription', sa.Column('speaker', mysql.VARCHAR(length=200), nullable=False))
    op.add_column('transcription', sa.Column('critical', mysql.VARCHAR(length=200), nullable=False))
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass

def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass

